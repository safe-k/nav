#!/usr/bin/env bash

NAV_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

config="$NAV_PATH/.nav.config"
if [ ! -f "$config" ]; then
    touch "$config"
fi

# Formatting config
FORMAT="true"

RED="\033[0;31m"
BLUE="\033[0;34m"
GREY="\033[0;37m"
ORANGE="\033[0;33m"
NC="\033[0m"

BOLD=$(tput bold)
NF=$(tput sgr0)

help_pin="Usage: nav pin [location] [alias]"
help_to="Usage: nav to [alias]"
help_rm="Usage: nav rm [alias]"

message () {
    local type="$1"
    local message="$2"

    local colour="$NC"
    local format="$NF"

    if [ "$FORMAT" == "false" ]; then
        echo "$message"
    else
        case "$type" in
            (error)
                colour="$RED"
                message="Error: $message"
                ;;
            (warning)
                colour="$ORANGE"
                message="Warning: $message"
                ;;
            (info) colour="$GREY";;
            (instruction) colour="$BLUE";;
            (header) format="$BOLD";;
            (table) message="$(echo "$message" | column -s "=" -t)";;
        esac

        echo -e "${format}${colour}$message${NF}${NC}"
    fi
}

get_usage_instructions () {
    message header "Available actions:"
    message generic "- $(message instruction pin) $(message info "($help_pin)")"
    message generic "- $(message instruction to) $(message info "($help_to)")"
    message generic "- $(message instruction rm) $(message info "($help_rm)")"
    message generic "- $(message instruction list)"
    message generic "- $(message instruction which)"
    message generic "- $(message instruction update)"
}

resolve_alias () {
    local location

    while read line; do
        local alias=$(echo "$line" | cut -d "=" -f 1)

        if [ "$1" == "$alias" ]; then
            location=$(echo "$line" | cut -d "=" -f 2)
            break;
        fi
    done < "$config"

    if [ ! -z "$location" ]; then
        echo "$location"
    fi
}

alias_location () {
    local location="$1"
    local alias="$2"

    if [[ -z "$location" || -z "$alias" ]]; then
        message info "$help_pin"
        return 0
    fi

    if [ ${location:0:1} = "." ]; then
        location="$(pwd)${location:1}"
    elif [ ! ${location:0:1} = "/" ]; then
        location="$(pwd)/$location"
    elif [ ${location:0:1} = "~" ]; then
        location="$("$location")"
    fi

    if [ ! -d "$location" ]; then
        message error "'$location' is not a directory"
        return 0
    fi

    if [[ "$alias" =~ [^a-zA-Z0-9] ]]; then
        message error "Alias must only contain alphanumeric characters"
        return 0
    fi

    local existing_alias=$(resolve_alias "$alias")
    if [ ! -z "$existing_alias" ]; then
        message warning "Overwriting existing value for '$alias'"
        delete_alias "$alias"
    fi

    echo "$alias=${location%/}" >> "$config"
}

goto_location () {
    local alias="$1"

    if [ -z "$alias" ]; then
        message info "$help_to"
        return 0
    fi

    local location=$(resolve_alias "$alias")

    if [ -z "$location" ]; then
        message error "No alias found matching '$alias'"
        return 0
    fi

    cd "$location"
}

delete_alias () {
    local alias="$1"

    if [ -z "$alias" ]; then
        message info "$help_rm"
        return 0;
    fi

    sed -i '' "/^$alias/d" "$config"
}

list_aliases () {
    local aliases="$(cat "$config")"

    if [ ! -z "$aliases" ]; then
        message table "$aliases"
    fi
}

get_installation_location () {
    message info "$NAV_PATH"
}

download_latest_executable () {
    $(cd "$NAV_PATH" && curl -OJ https://raw.githubusercontent.com/safe-k/nav/master/nav)

    message info "Executable updated."
    message generic "Please run \`$(message instruction "source $NAV_PATH/nav")\`."
}

nav () {
    action="$1"

    case "$action" in
        (pin) alias_location "$2" "$3";;
        (to) goto_location "$2";;
        (list) list_aliases;;
        (rm) delete_alias "$2";;
        (help) get_usage_instructions;;
        (which) get_installation_location;;
        (update) download_latest_executable;;
        (*) nav help ;;
    esac
}
